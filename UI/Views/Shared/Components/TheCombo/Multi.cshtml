@model UI.Models.TheComboViewModel


@{
    //string strPrefix = Model.Entity.Substring(0, 3);
    string _DataTextField = Model.getTextField();    
    List<string> _names;
    var _fields = new List<string>;
    switch (Model.getPrefix()){
        case "p28":
            _fields=new List<string>{ "p28Name","p28Street1","p28City1"};
            _names = new List<string> { "Název","Ulice", "Město" };
            break;

        case "p10":
            _fields = new List<string> { "p10Name", "p10Code","p13Code" };
            _names = new List<string> { "Název", "Kód", "TPV" };
            break;
        case "p21":
            _fields = new List<string> { "p21Name", "p28Name" };
            _names = new List<string> { "Název", "Klient"};
            break;
        case "p26":
            _fields = new List<string> { "p26Name", "p26Code", "Klient" };
            _names = new List<string> { "Název", "Kód", "p28Name" };
            break;
        case "j02":
            _fields = new List<string> { "FullName", "j02Email", "p28Name" };
            _names = new List<string> { "Jméno", "E-mail", "Klient" };
            break;
    }

    var _cols = new List<BO.COM.StringPairValue>();
    _cols.Add (new BO.COM.StringPairValue() { Key = "p28Name", Value = "Název" });
    _cols.Add(new BO.COM.StringPairValue() { Key = "p28City1", Value = "Město" });


        }

@(Html.Kendo().MultiColumnComboBox()
    .Name(Model.ControlID)
    .Placeholder(Model.PlaceHolder)
              .DataTextField(_DataTextField)
              .DataValueField("pid")
    .Columns(columns =>
    {
            foreach(var field in _fields)
            {
                columns.Add().Field(field).Title(c.Value);
            }


        })
    .HtmlAttributes(new { style = "width:100%;" })
              .Filter(FilterType.Contains)
              .AutoBind(false)
              .MinLength(1)
              .HighlightFirst(true)
          .Value(Model.SelectedValue)
          .Text(Model.SelectedText)
          
          .Events(e =>
          {
        e.Select("onSelect").Change("onChange");
    })

          .DataSource(source =>
          {
        source.Read(read =>
        {

            read.Action("GetData", "Common");
        })

        .ServerFiltering(false);
    })
    )




<script type="text/javascript">

    function onSelect(e) {
        if (e.item) {
            var dataItem = this.dataItem(e.item.index());

                $("#@Model.CallerIDValue").val(dataItem.pid);
                $("#@Model.CallerIDText").val(dataItem.@_DataTextField);

        }
    }

    function onChange(e) {
        if (this.value() == this.text()) {
                $("#@Model.CallerIDValue").val("");
                $("#@Model.CallerIDText").val("");
        }

    }


</script>
