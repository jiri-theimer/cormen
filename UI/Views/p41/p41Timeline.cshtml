@model p41TimelineViewModel

@addTagHelper *, UI

@{
    ViewData["Title"] = "Timeline zakázek";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int _Month = Model.CurrentDate.Month;
    int _Year = Model.CurrentDate.Year;

    int _colsHours = 24;
    int x = 0;
    string strSlot = "00:00";
    string strNextSlot = "00:00";
    string strTitle = "";
    int intColSpan = 0;
    int intColStart = 0;
    int intColPosun = 2;
    int intColSpanPre = 0;
    int intColSpanPost = 0;
    int intColStartPost = 0;
    string strClass = "onetask";

}

<style type="text/css">
    .grid-container-header {
        display: grid;
        grid-gap: 0px;
        background-color: transparent;
        border-bottom: solid 1px silver;
        border-top: solid 1px silver;
    }

        .grid-container-header > div {
            height: 20px;
            text-align: center;
        }

    .grid-container {
        display: grid;
        grid-gap: 0px;
        grid-auto-flow: column;
    }

        .grid-container > div {
            
            text-align: left;
            margin-bottom: 1px;
        }

    .colheader {
        border-left: solid 1px silver;
    }

    div.stredisko {
        background-color: transparent;
        font-weight: bold;
        color: black;
    }

    span.kapacita {
        background-color: khaki;
        border: solid 1px silver;
        border-radius: 3px;
        padding-left: 2px;
        padding-right: 2px;
        font-weight: normal;
    }

    div.popre {
        border-top: solid 1px white;
        background-color: #66cc66;
        height: 50px;
    }

    div.popost {
        border-top: solid 1px white;
        background-color: #39ac39;
        height: 50px;
    }

    div.onetask {
        background-color: #40bf40;
        border-left: solid 1px white;
        border-top: solid 1px white;
        height: 50px;
    }

    div.onetask_overday {
        border-left: solid 1px white;
        border-top: solid 1px white;
        background-color: orange;
        height: 35px;
    }



    div.fondin {
        border-left: solid 1px white;
        background-color: #B0C4DE;
        height: 20px;
    }
    div.fondout {
        border-left: solid 1px silver;
        background-color: #FFF0F7;
        height: 20px;
    }
</style>


<div class="input-group">
    <div style="padding-top:4px;">
        <h4>Timeline výrobních zakázek</h4>
    </div>

    <div style="width:30px;">
        <button type="button" class="btn btn-light" title="Předchozí den" onclick="day_prev()">&lt;&lt;</button>
    </div>
    <div style="width: 120px;">

        <mydate asp-for="@Model.CurrentDate"></mydate>

    </div>
    <div style="width:30px;">
        <button type="button" class="btn btn-light" title="Následující den" onclick="day_next()">&gt;&gt;</button>
    </div>
    <div style=" min-width: 250px; margin-left: 20px;display:none;">
        <mycombo entity="p26Msz" asp-for="@Model.p26ID" selectedtext="@Model.p26Name" placeholder="Vyberte stroj (MSZ)..." event_after_changevalue="p26id_change" view-flag="2"></mycombo>
    </div>

</div>


<div class="grid-container-header" style="grid-template-columns:150px repeat(@_colsHours,60px);">

    <div style="grid-column: 1/span 1;" title="Vybraný den">@(BO.BAS.ObjectDate2String(Model.CurrentDate,"dd.MM. dddd"))</div>

    @for (int i = 0; i <= _colsHours - 1; i++)
    {
        strSlot = BO.BAS.RightString("0" + i.ToString(), 2) + ":00";
        strNextSlot = BO.BAS.RightString("0" + (i + 1).ToString(), 2) + ":00";

        <div class="colheader" title="@(strSlot+" - "+strNextSlot)" style="grid-column: @(i+intColPosun)/span 1;">@strSlot</div>
    }
</div>
<div class="grid-container-header" style="grid-template-columns:150px repeat(@(_colsHours*6),10px);">

    <div style="grid-column: 1/span 1;"></div>

    @for (int i = 0; i <= _colsHours - 1; i++)
    {
        for (int j = 10; j <= 60; j = j + 10)
        {
            strSlot = BO.BAS.RightString("0" + i.ToString(), 2) + ":" + BO.BAS.RightString("0" + j.ToString(), 2);

            <div class="colheader" title="@(strSlot)" style="grid-column: @(x+intColPosun)/span 1;"></div>

            x += 1;
        }


    }
</div>



@foreach (var stredisko in Model.lisP27)
{
    x = 0;
    <div class="grid-container" style="grid-template-columns:150px repeat(@(_colsHours*6),10px);">
        <div class="stredisko" style="grid-column: 1/span 1;"></div>
        @for (int i = 0; i <= _colsHours - 1; i++)
        {
            for (int j = 10; j <= 60; j = j + 10)
            {
                if (Model.lisFond.Where(p => p.p33Hour == i + 1 && j >= p.p33Minute).Count() > 0)
                {
                    

                    <div class="fondin" style="grid-column: @(x+intColPosun)/span 1;"></div>
                }
                else
                {
                    <div class="fondout" style="grid-column: @(x+intColPosun)/span 1;"></div>
                }

                x += 1;

            }


        }


    </div>

    <div class="grid-container" style="grid-template-columns:150px repeat(@(_colsHours*6),10px);border-bottom: dashed 1px silver;margin-bottom: 3px;">
        <div class="stredisko" style="grid-column: 1/span 1;">
            <a class="cm" onclick="_cm(event,'p27',@stredisko.pid)">☰</a>
            @stredisko.p27Name <span class="kapacita">
                @stredisko.p27Capacity
            </span>
        </div>
        @foreach (var task in Model.Tasks.Where(p => p.p27ID == stredisko.pid))
        {
            strClass = "onetask";
            intColStart = (task.p41PlanStart.Hour * 60 + task.p41PlanStart.Minute) / 10 + intColPosun;
            intColSpan = (task.p41PlanEnd.Hour * 60 + task.p41PlanEnd.Minute - task.p41PlanStart.Hour * 60 - task.p41PlanStart.Minute) / 10;



            if (task.p41PlanStart < Model.CurrentDate)
            {
                intColStart = intColPosun;
                strClass = "onetask_overday";
                intColSpan = (task.p41PlanEnd.Hour * 60 + task.p41PlanEnd.Minute) / 10;
            }
            if (task.p41PlanEnd > Model.CurrentDate.AddDays(1))
            {
                intColSpan = _colsHours * 6;
                strClass = "onetask_overday";
            }


            intColSpanPost = 0;
            intColStartPost = 0;
            if (task.p41DurationPoPost > 0)
            {
                intColSpanPost = intColSpan - Convert.ToInt32(task.p41DurationPoPost / 10);
                intColStartPost = intColStart + intColSpan - intColSpanPost;
                intColSpan = intColSpan - intColSpanPost;
            }


            strTitle = task.p41Code + ": " + task.p41Name;


            <div class="@strClass" style="grid-column: @intColStart/span @intColSpan;" title="@strTitle"><a class="cm" title="menu" onclick="_cm(event,'p41',@task.pid)">☰</a></div>

            if (intColStartPost > 0)
            {
            <div class="popost" title="PO-POST: @(BO.BAS.Number2String(task.p41DurationPoPost)+" minut")" style="grid-column: @intColStartPost/span @intColSpanPost;"></div>
            }


        }





    </div>
}



@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {

            $("#CurrentDatehelper").change(function () {
                var d = $(this).val();

                reload(d);
            });



        _mainmenu_select("p41", "p41timeline");
        });

    function day_next() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddDays(1)))";
        reload(d);
    }
    function day_prev() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddDays(-1)))";
        reload(d);
    }
    function month_next() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddMonths(1)))";
        reload(d);
    }
    function month_prev() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddMonths(-1)))";
        reload(d);
    }
    function p26id_change(p26id) {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate))";
        reload(d);
        }


    function reload(d) {
        var p26id = $("#p26ID").val();
        location.replace("/p41/p41Timeline?p26id=" + p26id + "&d=" + d);
        }


        function allowDrop(e) {
            e.preventDefault();
        }
        function drag(e) {
            e.dataTransfer.setData("Zakázka se pohybuje...", e.target.id);
        }
        function drop(e) {
            e.preventDefault();
            var data = e.dataTransfer.getData("text");
            _notify_message(document.getElementById(data).innerHTML);
            //e.target.appendChild(document.getElementById(data));
        }
    </script>
}
