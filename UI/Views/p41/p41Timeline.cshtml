@model p41TimelineViewModel

@addTagHelper *, UI

@{
    ViewData["Title"] = "Timeline zakázek";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int _Month = Model.CurrentDate.Month;
    int _Year = Model.CurrentDate.Year;

    int _colsHours = 24;
    //_colsHours = _colsHours - (Model.HourFrom-1);
    //_colsHours = _colsHours - (24-Model.HourUntil);

    int x = 0;
    string strSlot = "00:00";
    string strNextSlot = "00:00";
    string strTitle = "";
    string strTitlePre = "";
    string strTitlePost = "";
    int intColSpan = 0;
    int intColStart = 0;
    int intColPosun = 2;
    int intColSpanPre = 0;
    int intColStartPre = 0;
    int intColSpanPost = 0;
    int intColStartPost = 0;
    string strClass = "onetask";
    DateTime d = Model.CurrentDate;
    int intZpetPosunHourFrom = Model.HourFrom*60/10;  //posun kvůli nastavené časové ose od-do
    //int intCOlPosunUntil = (24 - Model.HourUntil) * 60 / 10;


}

<style type="text/css">
    .grid-container-header {
        display: grid;
        grid-gap: 0px;
        background-color: transparent;
        border-bottom: solid 1px silver;
        border-top: solid 1px silver;
    }

        .grid-container-header > div {
            height: 20px;
            text-align: center;
        }

    .grid-container {
        display: grid;
        grid-gap: 0px;
        grid-auto-flow: row;
    }

        .grid-container > div {
            text-align: left;
            margin-bottom: 1px;
        }

    .colheader {
        border-left: solid 1px silver;
    }

    div.stredisko {
        background-color: transparent;
        font-weight: bold;
        color: black;
    }

    span.kapacita {
        background-color: khaki;
        border: solid 1px silver;
        border-radius: 3px;
        padding-left: 2px;
        padding-right: 2px;
        font-weight: normal;
    }

    div.popre {
        border-top: solid 1px white;
        background-color: lawngreen;
        height: 35px;
        border-left: solid 1px white;
    }

    div.popost {
        border-top: solid 1px white;
        background-color: lightgreen;
        height: 35px;
    }

    div.onetask {
        background-color: darkseagreen;
        border-top: solid 1px white;
        height: 50px;
    }

    div.onetask_overday {
        border-top: solid 1px white;
        background-color: orange;
        height: 50px;
    }



    div.fondin {
        border-left: solid 1px white;
        background-color: #B0C4DE;
        height: 20px;
    }

    div.fondout {
        border-left: solid 1px silver;
        background-color: #FFF0F7;
        height: 20px;
    }
</style>


<div class="input-group">
    <div style="padding-top: 4px;">
        <h4>Timeline zakázek</h4>
    </div>

    <div style="width:30px;">
        <button type="button" class="btn btn-light" title="Předchozí den" onclick="day_prev()">&lt;&lt;</button>
    </div>
    <div style="width: 120px;">

        <mydate asp-for="@Model.CurrentDate"></mydate>

    </div>
    <div style="width:30px;">
        <button type="button" class="btn btn-light" title="Následující den" onclick="day_next()">&gt;&gt;</button>
    </div>

    <button id="cmdView" type="button" class="btn btn-light dropdown-toggle" style="margin-left:10px;">

        Nastavit zobrazení
    </button>



</div>
<div id="divView" style="max-width:1050px;display:none;background-color:aliceblue;">
    <div style="padding:20px;">
        <h4>Nastavit Timeline zobrazení</h4>
        <div class="input-group">
            <label>Hodina od:</label>
            <select asp-for="@Model.HourFrom">
                <option value="0">00:00</option>
                <option value="1">01:00</option>
                <option value="2">02:00</option>
                <option value="3">03:00</option>
                <option value="4">04:00</option>
                <option value="5">05:00</option>
                <option value="6">06:00</option>
                <option value="7">07:00</option>
                <option value="8">08:00</option>
                <option value="9">09:00</option>
                <option value="10">10:00</option>
                <option value="11">11:00</option>
            </select>
            <label>Hodina do:</label>
            <select asp-for="@Model.HourUntil">
                <option value="15">15:00</option>
                <option value="16">16:00</option>
                <option value="17">17:00</option>
                <option value="18">18:00</option>
                <option value="19">19:00</option>
                <option value="20">20:00</option>
                <option value="21">21:00</option>
                <option value="22">22:00</option>
                <option value="23">23:00</option>
                <option value="24">24:00</option>

            </select>
        </div>
        <div>
            <input type="checkbox" asp-for="@Model.localQuery.IsPoPre" />
            <label for="localQuery_IsPoPre">Zobrazovat zakázky s [PO-PRE] operacemi</label>
        </div>
        <div>
            <input type="checkbox" asp-for="@Model.localQuery.IsPoPost" />
            <label for="localQuery_IsPoPost">Zobrazovat zakázky s [PO-POST] operacemi</label>
        </div>
        <div>
            <input type="checkbox" asp-for="@Model.localQuery.IsTo" />
            <label for="localQuery_IsTo">Zobrazovat zakázky s [TO] operacemi</label>
        </div>
        <div>
            <mycombochecklist asp-for="@Model.localQuery.SelectedP27IDs" entity="p27MszUnit" selectedtext="@Model.localQuery.SelectedP27Names" placeholder="Vyberte střediska k zobrazení..."></mycombochecklist>
        </div>

        <button type="button" class="btn btn-primary" onclick="localquery_submit()">Uložit Timeline nastavení</button>
    </div>


</div>


<div class="grid-container-header" style="grid-template-columns:150px repeat(@_colsHours,60px);">

    <div style="grid-column: 1/span 1;" title="Vybraný den">@(BO.BAS.ObjectDate2String(Model.CurrentDate,"dd.MM. dddd"))</div>

    @for (int i = Model.HourFrom; i < Model.HourUntil; i++)
    {

        strSlot = BO.BAS.RightString("0" + i.ToString(), 2) + ":00";
        strNextSlot = BO.BAS.RightString("0" + (i + 1).ToString(), 2) + ":00";

        <div class="colheader" title="@(strSlot+" - "+strNextSlot)" style="grid-column: @(x+intColPosun)/span 1;">@strSlot</div>
        x += 1;

    }

</div>
@{
    x = 0;
}
<div class="grid-container-header" style="grid-template-columns:150px repeat(@(_colsHours*6),10px);">

    <div style="grid-column: 1/span 1;"></div>

    @for (int i = Model.HourFrom; i < Model.HourUntil; i++)
    {
        for (int j = 0; j < 60; j = j + 10)
        {
            strSlot = BO.BAS.RightString("0" + i.ToString(), 2) + ":" + BO.BAS.RightString("0" + j.ToString(), 2);
            if (j < 50)
            {
                strNextSlot = BO.BAS.RightString("0" + i.ToString(), 2) + ":" + BO.BAS.RightString("0" + (j + 10).ToString(), 2);
            }
            else
            {
                strNextSlot = BO.BAS.RightString("0" + (i + 1).ToString(), 2) + ":00";
            }


            <div class="colheader" title="@(strSlot+" - "+strNextSlot)" style="grid-column: @(x+intColPosun)/span 1;"></div>

            x += 1;
        }


    }
</div>



@foreach (var stredisko in Model.lisP27)
{
    x = 0;
    <div class="grid-container" style="grid-template-columns:150px repeat(@(_colsHours*6),10px);">
        <div class="stredisko" style="grid-column: 1/span 1;"></div>
        @for (int i = Model.HourFrom; i < Model.HourUntil; i++)
        {
            for (int j = 0; j < 60; j = j + 10)
            {
                d = Model.CurrentDate.AddHours(i).AddMinutes(j);
                if (Model.lisFond.Where(p => (d >= p.p33DateTime && d <= p.p33DateTimeUntil)).Count() > 0)
                {


                    <div class="fondin" style="grid-column: @(x+intColPosun)/span 1;"></div>
                }
                else
                {
                    <div class="fondout" style="grid-column: @(x+intColPosun)/span 1;"></div>
                }

                x += 1;

            }



        }


    </div>

    <div class="grid-container" style="grid-template-columns:150px repeat(@(_colsHours*6),10px);border-bottom: dashed 1px silver;margin-bottom: 3px;">
        <div class="stredisko" style="grid-column: 1/span 1;">
            <div style="margin-left:16px;">@stredisko.p26Name</div>
            <a class="cm" onclick="_cm(event,'p27',@stredisko.pid)">☰</a>
            @stredisko.p27Name <span class="kapacita">
                @stredisko.p27Capacity
            </span>
        </div>
        @foreach (var task in Model.Tasks.Where(p => p.p27ID == stredisko.pid))
        {
            strClass = "onetask";
            intColStart = (task.p41PlanStart.Hour * 60 + task.p41PlanStart.Minute) / 10 + intColPosun-intZpetPosunHourFrom;


            intColSpan = (task.p41PlanEnd.Hour * 60 + task.p41PlanEnd.Minute - task.p41PlanStart.Hour * 60 - task.p41PlanStart.Minute);
            if (intColSpan % 10 > 0)
            {
                intColSpan = intColSpan / 10;
                intColSpan = intColSpan + 1;
            }
            else
            {
                intColSpan = intColSpan / 10;
            }
            intColSpan = intColSpan + 1;



            if (task.p41PlanStart < Model.CurrentDT1)
            {
                intColStart = intColPosun;
                strClass = "onetask_overday";
                intColSpan = 1;
                if (task.p41PlanEnd > Model.CurrentDT1)
                {
                    intColSpan = (task.p41PlanEnd.Hour * 60 + task.p41PlanEnd.Minute - Model.CurrentDT1.Hour * 60 - Model.CurrentDT1.Minute)/10;
                }
            }
            if (task.p41PlanEnd > Model.CurrentDT2)
            {
                strClass = "onetask_overday";
                intColStart = (task.p41PlanStart.Hour * 60 + task.p41PlanStart.Minute) / 10 +intColPosun - intZpetPosunHourFrom;
                intColSpan = 1+(Model.CurrentDT2.Hour * 60 + Model.CurrentDT2.Minute - task.p41PlanStart.Hour * 60 - task.p41PlanStart.Minute) / 10;
            }


            intColSpanPre = 0;
            intColStartPre = 0;
            if (task.p41DurationPoPre > 0)
            {
                intColStartPre = intColStart;
                intColSpanPre = Convert.ToInt32(task.p41DurationPoPre / 10);
                if (intColSpanPre == 0)
                {
                    intColSpanPre = 1;
                }
                intColStart = intColStart + intColSpanPre;
                intColSpan = intColSpan - intColSpanPre;
                strTitlePre = task.p41Code + ": " + BO.BAS.ObjectDateTime2String(task.p41PlanStart, "HH:mm") + " - " + BO.BAS.ObjectDateTime2String(task.p41PlanStart.AddMinutes(task.p41DurationPoPre), "HH:mm");
            }
            intColSpanPost = 0;
            intColStartPost = 0;
            if (task.p41DurationPoPost > 0)
            {
                intColSpanPost = Convert.ToInt32(task.p41DurationPoPost / 10);
                intColStartPost = intColStart + intColSpan - intColSpanPost;
                intColSpan = intColSpan - intColSpanPost;
                strTitlePost = task.p41Code + ": " + BO.BAS.ObjectDateTime2String(task.p41PlanEnd.AddMinutes(-1 * task.p41DurationPoPost), "HH:mm") + " - " + BO.BAS.ObjectDateTime2String(task.p41PlanEnd, "HH:mm");
            }


            strTitle = task.p41Code + ": " + BO.BAS.ObjectDateTime2String(task.p41PlanStart.AddMinutes(task.p41DurationPoPre), "HH:mm") + " - " + BO.BAS.ObjectDateTime2String(task.p41PlanEnd.AddMinutes(-1 * task.p41DurationPoPost), "HH:mm") + ": " + BO.BAS.OM2(task.p41Name, 30);

            if (intColStartPre > 0)
            {
                <div class="popre" title="PO-PRE: @(strTitlePre)" style="grid-column: @intColStartPre/span @intColSpanPre;"></div>
            }

            <div class="@strClass" style="grid-column: @intColStart/span @intColSpan;" title="@strTitle"><a class="cm" title="menu" onclick="_cm(event,'p41',@task.pid)">☰</a></div>

            if (intColStartPost > 0)
            {
                <div class="popost" title="PO-POST: @(strTitlePost)" style="grid-column: @intColStartPost/span @intColSpanPost;"></div>
            }


        }





    </div>
}



@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {



            $("#cmdView").click(function () {
                $("#divView").slideToggle();
            });

            $("#CurrentDatehelper").change(function () {
                var d = $(this).val();

                reload(d);
            });



        _mainmenu_select("p41", "p41timeline");
        });

    function day_next() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddDays(1)))";
        reload(d);
    }
    function day_prev() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddDays(-1)))";
        reload(d);
    }
    function month_next() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddMonths(1)))";
        reload(d);
    }
    function month_prev() {
        var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate.AddMonths(-1)))";
        reload(d);
    }



    function reload(d) {

        location.replace("/p41/p41Timeline?d=" + d);
        }


        function localquery_submit() {
            var keys = [];
            var vals = [];

            keys.push("p41Timeline-p27ids");
            vals.push($("#localQuery_SelectedP27IDs").val());
            keys.push("p41Timeline-p27names");
            vals.push($("#value_alias_localQuery_SelectedP27IDs").val());
            keys.push("p41Timeline-hourfrom");
            vals.push($("#HourFrom").val());
            keys.push("p41Timeline-houruntil");
            vals.push($("#HourUntil").val());
            keys.push("p41Timeline-ispopre");
            if ($("#localQuery_IsPoPre").prop("checked") == true) {
                vals.push("1");
            }else {
                vals.push("0");
            }
            keys.push("p41Timeline-isto");
            if ($("#localQuery_IsTo").prop("checked") == true) {
                vals.push("1");
            } else {
                vals.push("0");
            }
            keys.push("p41Timeline-ispopost");
            if ($("#localQuery_IsPoPost").prop("checked") == true) {
                vals.push("1");
            } else {
                vals.push("0");
            }

            $.post("/Common/SetUserParams", { keys: keys,values:vals }, function (data) {

                var d = "@(BO.BAS.ObjectDate2String( Model.CurrentDate))";
                reload(d);


            });
        }

    </script>
}
